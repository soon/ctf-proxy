// This file is auto-generated by @hey-api/openapi-ts

import type { Client, Options as Options2, TDataShape } from "./client";
import { client } from "./client.gen";
import type {
	ExecuteSqlApiSqlPostData,
	ExecuteSqlApiSqlPostErrors,
	ExecuteSqlApiSqlPostResponses,
	ExportSqlCsvApiSqlExportPostData,
	ExportSqlCsvApiSqlExportPostErrors,
	ExportSqlCsvApiSqlExportPostResponses,
	GetConfigApiConfigGetData,
	GetConfigApiConfigGetResponses,
	GetConfigRevisionApiConfigRevisionFilenameGetData,
	GetConfigRevisionApiConfigRevisionFilenameGetErrors,
	GetConfigRevisionApiConfigRevisionFilenameGetResponses,
	GetRecentFlagStatsApiFlagsRecentGetData,
	GetRecentFlagStatsApiFlagsRecentGetResponses,
	GetRequestDetailApiRequestsRequestIdGetData,
	GetRequestDetailApiRequestsRequestIdGetErrors,
	GetRequestDetailApiRequestsRequestIdGetResponses,
	GetRequestRawApiRequestsRequestIdRawGetData,
	GetRequestRawApiRequestsRequestIdRawGetErrors,
	GetRequestRawApiRequestsRequestIdRawGetResponses,
	GetServiceByPortApiServicesPortGetData,
	GetServiceByPortApiServicesPortGetErrors,
	GetServiceByPortApiServicesPortGetResponses,
	GetServiceHeaderStatsApiServicesPortHeadersGetData,
	GetServiceHeaderStatsApiServicesPortHeadersGetErrors,
	GetServiceHeaderStatsApiServicesPortHeadersGetResponses,
	GetServicePathStatsApiServicesPortPathsGetData,
	GetServicePathStatsApiServicesPortPathsGetErrors,
	GetServicePathStatsApiServicesPortPathsGetResponses,
	GetServiceQueryStatsApiServicesPortQueriesGetData,
	GetServiceQueryStatsApiServicesPortQueriesGetErrors,
	GetServiceQueryStatsApiServicesPortQueriesGetResponses,
	GetServiceRequestsApiServicesPortRequestsGetData,
	GetServiceRequestsApiServicesPortRequestsGetErrors,
	GetServiceRequestsApiServicesPortRequestsGetResponses,
	GetServicesApiServicesGetData,
	GetServicesApiServicesGetResponses,
	GetSqlSchemaApiSqlSchemaGetData,
	GetSqlSchemaApiSqlSchemaGetResponses,
	GetTcpConnectionDetailApiTcpConnectionsConnectionIdGetData,
	GetTcpConnectionDetailApiTcpConnectionsConnectionIdGetErrors,
	GetTcpConnectionDetailApiTcpConnectionsConnectionIdGetResponses,
	GetTcpConnectionsApiServicesPortTcpConnectionsGetData,
	GetTcpConnectionsApiServicesPortTcpConnectionsGetErrors,
	GetTcpConnectionsApiServicesPortTcpConnectionsGetResponses,
	GetTcpConnectionStatsApiServicesPortTcpConnectionStatsGetData,
	GetTcpConnectionStatsApiServicesPortTcpConnectionStatsGetErrors,
	GetTcpConnectionStatsApiServicesPortTcpConnectionStatsGetResponses,
	HealthCheckApiHealthGetData,
	HealthCheckApiHealthGetResponses,
	SaveConfigApiConfigPostData,
	SaveConfigApiConfigPostErrors,
	SaveConfigApiConfigPostResponses,
	ValidateConfigApiConfigValidatePostData,
	ValidateConfigApiConfigValidatePostErrors,
	ValidateConfigApiConfigValidatePostResponses,
} from "./types.gen";

export type Options<
	TData extends TDataShape = TDataShape,
	ThrowOnError extends boolean = boolean,
> = Options2<TData, ThrowOnError> & {
	/**
	 * You can provide a client instance returned by `createClient()` instead of
	 * individual options. This might be also useful if you want to implement a
	 * custom client.
	 */
	client?: Client;
	/**
	 * You can pass arbitrary values through the `meta` object. This can be
	 * used to access values that aren't defined as part of the SDK function.
	 */
	meta?: Record<string, unknown>;
};

/**
 * Health Check
 */
export const healthCheckApiHealthGet = <ThrowOnError extends boolean = false>(
	options?: Options<HealthCheckApiHealthGetData, ThrowOnError>,
) => {
	return (options?.client ?? client).get<
		HealthCheckApiHealthGetResponses,
		unknown,
		ThrowOnError
	>({
		url: "/api/health",
		...options,
	});
};

/**
 * Execute Sql
 */
export const executeSqlApiSqlPost = <ThrowOnError extends boolean = false>(
	options: Options<ExecuteSqlApiSqlPostData, ThrowOnError>,
) => {
	return (options.client ?? client).post<
		ExecuteSqlApiSqlPostResponses,
		ExecuteSqlApiSqlPostErrors,
		ThrowOnError
	>({
		url: "/api/sql",
		...options,
		headers: {
			"Content-Type": "application/json",
			...options.headers,
		},
	});
};

/**
 * Get Sql Schema
 */
export const getSqlSchemaApiSqlSchemaGet = <
	ThrowOnError extends boolean = false,
>(
	options?: Options<GetSqlSchemaApiSqlSchemaGetData, ThrowOnError>,
) => {
	return (options?.client ?? client).get<
		GetSqlSchemaApiSqlSchemaGetResponses,
		unknown,
		ThrowOnError
	>({
		url: "/api/sql/schema",
		...options,
	});
};

/**
 * Export Sql Csv
 */
export const exportSqlCsvApiSqlExportPost = <
	ThrowOnError extends boolean = false,
>(
	options: Options<ExportSqlCsvApiSqlExportPostData, ThrowOnError>,
) => {
	return (options.client ?? client).post<
		ExportSqlCsvApiSqlExportPostResponses,
		ExportSqlCsvApiSqlExportPostErrors,
		ThrowOnError
	>({
		url: "/api/sql/export",
		...options,
		headers: {
			"Content-Type": "application/json",
			...options.headers,
		},
	});
};

/**
 * Get Services
 */
export const getServicesApiServicesGet = <ThrowOnError extends boolean = false>(
	options?: Options<GetServicesApiServicesGetData, ThrowOnError>,
) => {
	return (options?.client ?? client).get<
		GetServicesApiServicesGetResponses,
		unknown,
		ThrowOnError
	>({
		url: "/api/services",
		...options,
	});
};

/**
 * Get Service By Port
 */
export const getServiceByPortApiServicesPortGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<GetServiceByPortApiServicesPortGetData, ThrowOnError>,
) => {
	return (options.client ?? client).get<
		GetServiceByPortApiServicesPortGetResponses,
		GetServiceByPortApiServicesPortGetErrors,
		ThrowOnError
	>({
		url: "/api/services/{port}",
		...options,
	});
};

/**
 * Get Service Requests
 */
export const getServiceRequestsApiServicesPortRequestsGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<
		GetServiceRequestsApiServicesPortRequestsGetData,
		ThrowOnError
	>,
) => {
	return (options.client ?? client).get<
		GetServiceRequestsApiServicesPortRequestsGetResponses,
		GetServiceRequestsApiServicesPortRequestsGetErrors,
		ThrowOnError
	>({
		url: "/api/services/{port}/requests",
		...options,
	});
};

/**
 * Get Request Detail
 */
export const getRequestDetailApiRequestsRequestIdGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<GetRequestDetailApiRequestsRequestIdGetData, ThrowOnError>,
) => {
	return (options.client ?? client).get<
		GetRequestDetailApiRequestsRequestIdGetResponses,
		GetRequestDetailApiRequestsRequestIdGetErrors,
		ThrowOnError
	>({
		url: "/api/requests/{request_id}",
		...options,
	});
};

/**
 * Get Request Raw
 */
export const getRequestRawApiRequestsRequestIdRawGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<GetRequestRawApiRequestsRequestIdRawGetData, ThrowOnError>,
) => {
	return (options.client ?? client).get<
		GetRequestRawApiRequestsRequestIdRawGetResponses,
		GetRequestRawApiRequestsRequestIdRawGetErrors,
		ThrowOnError
	>({
		url: "/api/requests/{request_id}/raw",
		...options,
	});
};

/**
 * Get Service Path Stats
 */
export const getServicePathStatsApiServicesPortPathsGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<
		GetServicePathStatsApiServicesPortPathsGetData,
		ThrowOnError
	>,
) => {
	return (options.client ?? client).get<
		GetServicePathStatsApiServicesPortPathsGetResponses,
		GetServicePathStatsApiServicesPortPathsGetErrors,
		ThrowOnError
	>({
		url: "/api/services/{port}/paths",
		...options,
	});
};

/**
 * Get Service Query Stats
 */
export const getServiceQueryStatsApiServicesPortQueriesGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<
		GetServiceQueryStatsApiServicesPortQueriesGetData,
		ThrowOnError
	>,
) => {
	return (options.client ?? client).get<
		GetServiceQueryStatsApiServicesPortQueriesGetResponses,
		GetServiceQueryStatsApiServicesPortQueriesGetErrors,
		ThrowOnError
	>({
		url: "/api/services/{port}/queries",
		...options,
	});
};

/**
 * Get Service Header Stats
 */
export const getServiceHeaderStatsApiServicesPortHeadersGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<
		GetServiceHeaderStatsApiServicesPortHeadersGetData,
		ThrowOnError
	>,
) => {
	return (options.client ?? client).get<
		GetServiceHeaderStatsApiServicesPortHeadersGetResponses,
		GetServiceHeaderStatsApiServicesPortHeadersGetErrors,
		ThrowOnError
	>({
		url: "/api/services/{port}/headers",
		...options,
	});
};

/**
 * Get Tcp Connections
 */
export const getTcpConnectionsApiServicesPortTcpConnectionsGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<
		GetTcpConnectionsApiServicesPortTcpConnectionsGetData,
		ThrowOnError
	>,
) => {
	return (options.client ?? client).get<
		GetTcpConnectionsApiServicesPortTcpConnectionsGetResponses,
		GetTcpConnectionsApiServicesPortTcpConnectionsGetErrors,
		ThrowOnError
	>({
		url: "/api/services/{port}/tcp-connections",
		...options,
	});
};

/**
 * Get Tcp Connection Detail
 */
export const getTcpConnectionDetailApiTcpConnectionsConnectionIdGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<
		GetTcpConnectionDetailApiTcpConnectionsConnectionIdGetData,
		ThrowOnError
	>,
) => {
	return (options.client ?? client).get<
		GetTcpConnectionDetailApiTcpConnectionsConnectionIdGetResponses,
		GetTcpConnectionDetailApiTcpConnectionsConnectionIdGetErrors,
		ThrowOnError
	>({
		url: "/api/tcp-connections/{connection_id}",
		...options,
	});
};

/**
 * Get Tcp Connection Stats
 */
export const getTcpConnectionStatsApiServicesPortTcpConnectionStatsGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<
		GetTcpConnectionStatsApiServicesPortTcpConnectionStatsGetData,
		ThrowOnError
	>,
) => {
	return (options.client ?? client).get<
		GetTcpConnectionStatsApiServicesPortTcpConnectionStatsGetResponses,
		GetTcpConnectionStatsApiServicesPortTcpConnectionStatsGetErrors,
		ThrowOnError
	>({
		url: "/api/services/{port}/tcp-connection-stats",
		...options,
	});
};

/**
 * Get Recent Flag Stats
 * Get flag statistics for the last 5 minutes.
 */
export const getRecentFlagStatsApiFlagsRecentGet = <
	ThrowOnError extends boolean = false,
>(
	options?: Options<GetRecentFlagStatsApiFlagsRecentGetData, ThrowOnError>,
) => {
	return (options?.client ?? client).get<
		GetRecentFlagStatsApiFlagsRecentGetResponses,
		unknown,
		ThrowOnError
	>({
		url: "/api/flags/recent",
		...options,
	});
};

/**
 * Get Config
 * Get current config content and list of revisions.
 */
export const getConfigApiConfigGet = <ThrowOnError extends boolean = false>(
	options?: Options<GetConfigApiConfigGetData, ThrowOnError>,
) => {
	return (options?.client ?? client).get<
		GetConfigApiConfigGetResponses,
		unknown,
		ThrowOnError
	>({
		url: "/api/config",
		...options,
	});
};

/**
 * Save Config
 * Save config after validation and create a backup.
 */
export const saveConfigApiConfigPost = <ThrowOnError extends boolean = false>(
	options: Options<SaveConfigApiConfigPostData, ThrowOnError>,
) => {
	return (options.client ?? client).post<
		SaveConfigApiConfigPostResponses,
		SaveConfigApiConfigPostErrors,
		ThrowOnError
	>({
		url: "/api/config",
		...options,
		headers: {
			"Content-Type": "application/json",
			...options.headers,
		},
	});
};

/**
 * Get Config Revision
 * Get content of a specific config revision.
 */
export const getConfigRevisionApiConfigRevisionFilenameGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<
		GetConfigRevisionApiConfigRevisionFilenameGetData,
		ThrowOnError
	>,
) => {
	return (options.client ?? client).get<
		GetConfigRevisionApiConfigRevisionFilenameGetResponses,
		GetConfigRevisionApiConfigRevisionFilenameGetErrors,
		ThrowOnError
	>({
		url: "/api/config/revision/{filename}",
		...options,
	});
};

/**
 * Validate Config
 * Validate config without saving.
 */
export const validateConfigApiConfigValidatePost = <
	ThrowOnError extends boolean = false,
>(
	options: Options<ValidateConfigApiConfigValidatePostData, ThrowOnError>,
) => {
	return (options.client ?? client).post<
		ValidateConfigApiConfigValidatePostResponses,
		ValidateConfigApiConfigValidatePostErrors,
		ThrowOnError
	>({
		url: "/api/config/validate",
		...options,
		headers: {
			"Content-Type": "application/json",
			...options.headers,
		},
	});
};
