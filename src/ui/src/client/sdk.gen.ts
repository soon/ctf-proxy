// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, Client, TDataShape } from "./client";
import type {
	HealthCheckApiHealthGetData,
	HealthCheckApiHealthGetResponses,
	GetServicesApiServicesGetData,
	GetServicesApiServicesGetResponses,
	GetServiceByPortApiServicesPortGetData,
	GetServiceByPortApiServicesPortGetResponses,
	GetServiceByPortApiServicesPortGetErrors,
	GetServiceRequestsApiServicesPortRequestsGetData,
	GetServiceRequestsApiServicesPortRequestsGetResponses,
	GetServiceRequestsApiServicesPortRequestsGetErrors,
	GetRequestDetailApiRequestsRequestIdGetData,
	GetRequestDetailApiRequestsRequestIdGetResponses,
	GetRequestDetailApiRequestsRequestIdGetErrors,
	GetRequestRawApiRequestsRequestIdRawGetData,
	GetRequestRawApiRequestsRequestIdRawGetResponses,
	GetRequestRawApiRequestsRequestIdRawGetErrors,
	GetServicePathStatsApiServicesPortPathsGetData,
	GetServicePathStatsApiServicesPortPathsGetResponses,
	GetServicePathStatsApiServicesPortPathsGetErrors,
	GetServiceQueryStatsApiServicesPortQueriesGetData,
	GetServiceQueryStatsApiServicesPortQueriesGetResponses,
	GetServiceQueryStatsApiServicesPortQueriesGetErrors,
	GetServiceHeaderStatsApiServicesPortHeadersGetData,
	GetServiceHeaderStatsApiServicesPortHeadersGetResponses,
	GetServiceHeaderStatsApiServicesPortHeadersGetErrors,
	GetTcpConnectionsApiServicesPortTcpConnectionsGetData,
	GetTcpConnectionsApiServicesPortTcpConnectionsGetResponses,
	GetTcpConnectionsApiServicesPortTcpConnectionsGetErrors,
	GetTcpConnectionDetailApiTcpConnectionsConnectionIdGetData,
	GetTcpConnectionDetailApiTcpConnectionsConnectionIdGetResponses,
	GetTcpConnectionDetailApiTcpConnectionsConnectionIdGetErrors,
	GetTcpConnectionStatsApiServicesPortTcpConnectionStatsGetData,
	GetTcpConnectionStatsApiServicesPortTcpConnectionStatsGetResponses,
	GetTcpConnectionStatsApiServicesPortTcpConnectionStatsGetErrors,
} from "./types.gen";
import { client } from "./client.gen";

export type Options<
	TData extends TDataShape = TDataShape,
	ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
	/**
	 * You can provide a client instance returned by `createClient()` instead of
	 * individual options. This might be also useful if you want to implement a
	 * custom client.
	 */
	client?: Client;
	/**
	 * You can pass arbitrary values through the `meta` object. This can be
	 * used to access values that aren't defined as part of the SDK function.
	 */
	meta?: Record<string, unknown>;
};

/**
 * Health Check
 */
export const healthCheckApiHealthGet = <ThrowOnError extends boolean = false>(
	options?: Options<HealthCheckApiHealthGetData, ThrowOnError>,
) => {
	return (options?.client ?? client).get<
		HealthCheckApiHealthGetResponses,
		unknown,
		ThrowOnError
	>({
		url: "/api/health",
		...options,
	});
};

/**
 * Get Services
 */
export const getServicesApiServicesGet = <ThrowOnError extends boolean = false>(
	options?: Options<GetServicesApiServicesGetData, ThrowOnError>,
) => {
	return (options?.client ?? client).get<
		GetServicesApiServicesGetResponses,
		unknown,
		ThrowOnError
	>({
		url: "/api/services",
		...options,
	});
};

/**
 * Get Service By Port
 */
export const getServiceByPortApiServicesPortGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<GetServiceByPortApiServicesPortGetData, ThrowOnError>,
) => {
	return (options.client ?? client).get<
		GetServiceByPortApiServicesPortGetResponses,
		GetServiceByPortApiServicesPortGetErrors,
		ThrowOnError
	>({
		url: "/api/services/{port}",
		...options,
	});
};

/**
 * Get Service Requests
 */
export const getServiceRequestsApiServicesPortRequestsGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<
		GetServiceRequestsApiServicesPortRequestsGetData,
		ThrowOnError
	>,
) => {
	return (options.client ?? client).get<
		GetServiceRequestsApiServicesPortRequestsGetResponses,
		GetServiceRequestsApiServicesPortRequestsGetErrors,
		ThrowOnError
	>({
		url: "/api/services/{port}/requests",
		...options,
	});
};

/**
 * Get Request Detail
 */
export const getRequestDetailApiRequestsRequestIdGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<GetRequestDetailApiRequestsRequestIdGetData, ThrowOnError>,
) => {
	return (options.client ?? client).get<
		GetRequestDetailApiRequestsRequestIdGetResponses,
		GetRequestDetailApiRequestsRequestIdGetErrors,
		ThrowOnError
	>({
		url: "/api/requests/{request_id}",
		...options,
	});
};

/**
 * Get Request Raw
 */
export const getRequestRawApiRequestsRequestIdRawGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<GetRequestRawApiRequestsRequestIdRawGetData, ThrowOnError>,
) => {
	return (options.client ?? client).get<
		GetRequestRawApiRequestsRequestIdRawGetResponses,
		GetRequestRawApiRequestsRequestIdRawGetErrors,
		ThrowOnError
	>({
		url: "/api/requests/{request_id}/raw",
		...options,
	});
};

/**
 * Get Service Path Stats
 */
export const getServicePathStatsApiServicesPortPathsGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<
		GetServicePathStatsApiServicesPortPathsGetData,
		ThrowOnError
	>,
) => {
	return (options.client ?? client).get<
		GetServicePathStatsApiServicesPortPathsGetResponses,
		GetServicePathStatsApiServicesPortPathsGetErrors,
		ThrowOnError
	>({
		url: "/api/services/{port}/paths",
		...options,
	});
};

/**
 * Get Service Query Stats
 */
export const getServiceQueryStatsApiServicesPortQueriesGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<
		GetServiceQueryStatsApiServicesPortQueriesGetData,
		ThrowOnError
	>,
) => {
	return (options.client ?? client).get<
		GetServiceQueryStatsApiServicesPortQueriesGetResponses,
		GetServiceQueryStatsApiServicesPortQueriesGetErrors,
		ThrowOnError
	>({
		url: "/api/services/{port}/queries",
		...options,
	});
};

/**
 * Get Service Header Stats
 */
export const getServiceHeaderStatsApiServicesPortHeadersGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<
		GetServiceHeaderStatsApiServicesPortHeadersGetData,
		ThrowOnError
	>,
) => {
	return (options.client ?? client).get<
		GetServiceHeaderStatsApiServicesPortHeadersGetResponses,
		GetServiceHeaderStatsApiServicesPortHeadersGetErrors,
		ThrowOnError
	>({
		url: "/api/services/{port}/headers",
		...options,
	});
};

/**
 * Get Tcp Connections
 */
export const getTcpConnectionsApiServicesPortTcpConnectionsGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<
		GetTcpConnectionsApiServicesPortTcpConnectionsGetData,
		ThrowOnError
	>,
) => {
	return (options.client ?? client).get<
		GetTcpConnectionsApiServicesPortTcpConnectionsGetResponses,
		GetTcpConnectionsApiServicesPortTcpConnectionsGetErrors,
		ThrowOnError
	>({
		url: "/api/services/{port}/tcp-connections",
		...options,
	});
};

/**
 * Get Tcp Connection Detail
 */
export const getTcpConnectionDetailApiTcpConnectionsConnectionIdGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<
		GetTcpConnectionDetailApiTcpConnectionsConnectionIdGetData,
		ThrowOnError
	>,
) => {
	return (options.client ?? client).get<
		GetTcpConnectionDetailApiTcpConnectionsConnectionIdGetResponses,
		GetTcpConnectionDetailApiTcpConnectionsConnectionIdGetErrors,
		ThrowOnError
	>({
		url: "/api/tcp-connections/{connection_id}",
		...options,
	});
};

/**
 * Get Tcp Connection Stats
 */
export const getTcpConnectionStatsApiServicesPortTcpConnectionStatsGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<
		GetTcpConnectionStatsApiServicesPortTcpConnectionStatsGetData,
		ThrowOnError
	>,
) => {
	return (options.client ?? client).get<
		GetTcpConnectionStatsApiServicesPortTcpConnectionStatsGetResponses,
		GetTcpConnectionStatsApiServicesPortTcpConnectionStatsGetErrors,
		ThrowOnError
	>({
		url: "/api/services/{port}/tcp-connection-stats",
		...options,
	});
};
