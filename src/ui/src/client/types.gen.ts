// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
	baseUrl: "http://localhost:8080" | (string & {});
};

/**
 * FlagItem
 */
export type FlagItem = {
	/**
	 * Id
	 */
	id: number;
	/**
	 * Flag
	 */
	flag: string;
	/**
	 * Reason
	 */
	reason: string | null;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
	/**
	 * Detail
	 */
	detail?: Array<ValidationError>;
};

/**
 * HeaderItem
 */
export type HeaderItem = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Value
	 */
	value: string;
};

/**
 * HeaderStatItem
 */
export type HeaderStatItem = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Value
	 */
	value: string;
	/**
	 * Total Count
	 */
	total_count: number;
	/**
	 * Time Series
	 */
	time_series: Array<TimePoint>;
};

/**
 * HeaderStatsResponse
 */
export type HeaderStatsResponse = {
	/**
	 * Headers
	 */
	headers: Array<HeaderStatItem>;
	/**
	 * Service Name
	 */
	service_name: string;
	/**
	 * Service Port
	 */
	service_port: number;
	/**
	 * Ignored Headers
	 */
	ignored_headers?: Array<string>;
	/**
	 * Window Minutes
	 */
	window_minutes?: number;
};

/**
 * LinkedRequestItem
 */
export type LinkedRequestItem = {
	/**
	 * Id
	 */
	id: number;
	/**
	 * Method
	 */
	method: string;
	/**
	 * Path
	 */
	path: string;
	/**
	 * Time
	 */
	time: string;
	/**
	 * Direction
	 */
	direction: string;
};

/**
 * PathStatItem
 */
export type PathStatItem = {
	/**
	 * Method
	 */
	method: string;
	/**
	 * Path
	 */
	path: string;
	/**
	 * Total Count
	 */
	total_count: number;
	/**
	 * Time Series
	 */
	time_series: Array<TimePoint>;
};

/**
 * PathStatsResponse
 */
export type PathStatsResponse = {
	/**
	 * Paths
	 */
	paths: Array<PathStatItem>;
	/**
	 * Service Name
	 */
	service_name: string;
	/**
	 * Service Port
	 */
	service_port: number;
	/**
	 * Ignored Paths
	 */
	ignored_paths?: Array<string>;
	/**
	 * Window Minutes
	 */
	window_minutes?: number;
};

/**
 * QueryStatItem
 */
export type QueryStatItem = {
	/**
	 * Param
	 */
	param: string;
	/**
	 * Value
	 */
	value: string;
	/**
	 * Total Count
	 */
	total_count: number;
	/**
	 * Time Series
	 */
	time_series: Array<TimePoint>;
};

/**
 * QueryStatsResponse
 */
export type QueryStatsResponse = {
	/**
	 * Queries
	 */
	queries: Array<QueryStatItem>;
	/**
	 * Service Name
	 */
	service_name: string;
	/**
	 * Service Port
	 */
	service_port: number;
	/**
	 * Ignored Queries
	 */
	ignored_queries?: Array<string>;
	/**
	 * Window Minutes
	 */
	window_minutes?: number;
};

/**
 * RequestDetail
 */
export type RequestDetail = {
	/**
	 * Id
	 */
	id: number;
	/**
	 * Method
	 */
	method: string;
	/**
	 * Path
	 */
	path: string;
	/**
	 * Port
	 */
	port: number;
	/**
	 * Timestamp
	 */
	timestamp: string;
	/**
	 * User Agent
	 */
	user_agent: string | null;
	/**
	 * Body
	 */
	body: string | null;
	/**
	 * Is Blocked
	 */
	is_blocked: boolean;
	/**
	 * Headers
	 */
	headers: Array<HeaderItem>;
	/**
	 * Query Params
	 */
	query_params: {
		[key: string]: string;
	};
	/**
	 * Flags
	 */
	flags: Array<FlagItem>;
	/**
	 * Linked Requests
	 */
	linked_requests: Array<LinkedRequestItem>;
};

/**
 * RequestDetailResponse
 */
export type RequestDetailResponse = {
	request: RequestDetail;
	response: ResponseDetail | null;
};

/**
 * RequestListItem
 */
export type RequestListItem = {
	/**
	 * Id
	 */
	id: number;
	/**
	 * Timestamp
	 */
	timestamp: string;
	/**
	 * Method
	 */
	method: string;
	/**
	 * Path
	 */
	path: string;
	/**
	 * Status
	 */
	status: number | null;
	/**
	 * Is Blocked
	 */
	is_blocked: boolean;
	/**
	 * User Agent
	 */
	user_agent: string;
	/**
	 * Request Flags
	 */
	request_flags: number;
	/**
	 * Response Flags
	 */
	response_flags: number;
	/**
	 * Incoming Links
	 */
	incoming_links: number;
	/**
	 * Outgoing Links
	 */
	outgoing_links: number;
};

/**
 * RequestListResponse
 */
export type RequestListResponse = {
	/**
	 * Requests
	 */
	requests: Array<RequestListItem>;
	/**
	 * Total
	 */
	total: number;
	/**
	 * Service Name
	 */
	service_name: string;
	/**
	 * Service Port
	 */
	service_port: number;
	/**
	 * Page
	 */
	page?: number;
	/**
	 * Page Size
	 */
	page_size?: number;
	/**
	 * Total Pages
	 */
	total_pages?: number;
};

/**
 * ResponseDetail
 */
export type ResponseDetail = {
	/**
	 * Id
	 */
	id: number | null;
	/**
	 * Status
	 */
	status: number | null;
	/**
	 * Body
	 */
	body: string | null;
	/**
	 * Headers
	 */
	headers: Array<HeaderItem>;
	/**
	 * Flags
	 */
	flags: Array<FlagItem>;
};

/**
 * ServiceListItem
 */
export type ServiceListItem = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Port
	 */
	port: number;
	/**
	 * Type
	 */
	type: string;
	stats: ServiceStats;
};

/**
 * ServiceListResponse
 */
export type ServiceListResponse = {
	/**
	 * Services
	 */
	services: Array<ServiceListItem>;
	/**
	 * Timestamp
	 */
	timestamp: string;
};

/**
 * ServiceStats
 */
export type ServiceStats = {
	/**
	 * Total Requests
	 */
	total_requests: number;
	/**
	 * Blocked Requests
	 */
	blocked_requests: number;
	/**
	 * Total Responses
	 */
	total_responses: number;
	/**
	 * Blocked Responses
	 */
	blocked_responses: number;
	/**
	 * Error Responses
	 */
	error_responses: number;
	/**
	 * Success Responses
	 */
	success_responses: number;
	/**
	 * Redirect Responses
	 */
	redirect_responses: number;
	/**
	 * Status Counts
	 */
	status_counts: {
		[key: string]: number;
	};
	/**
	 * Unique Paths
	 */
	unique_paths: number;
	/**
	 * Alerts Count
	 */
	alerts_count: number;
	/**
	 * Recent Alerts
	 */
	recent_alerts: Array<[string, unknown]>;
	/**
	 * Flags Written
	 */
	flags_written: number;
	/**
	 * Flags Retrieved
	 */
	flags_retrieved: number;
	/**
	 * Flags Blocked
	 */
	flags_blocked: number;
	/**
	 * Total Flags
	 */
	total_flags: number;
	/**
	 * Unique Headers
	 */
	unique_headers: number;
	/**
	 * Unique Header Values
	 */
	unique_header_values: number;
	tcp_stats?: TcpStats | null;
};

/**
 * TCPConnectionDetail
 */
export type TcpConnectionDetail = {
	/**
	 * Id
	 */
	id: number;
	/**
	 * Connection Id
	 */
	connection_id: number;
	/**
	 * Port
	 */
	port: number;
	/**
	 * Timestamp
	 */
	timestamp: string;
	/**
	 * Duration Ms
	 */
	duration_ms: number | null;
	/**
	 * Bytes In
	 */
	bytes_in: number;
	/**
	 * Bytes Out
	 */
	bytes_out: number;
	/**
	 * Events
	 */
	events: Array<TcpEventItem>;
	/**
	 * Total Flags
	 */
	total_flags: number;
	/**
	 * Is Blocked
	 */
	is_blocked: boolean;
};

/**
 * TCPConnectionItem
 */
export type TcpConnectionItem = {
	/**
	 * Id
	 */
	id: number;
	/**
	 * Connection Id
	 */
	connection_id: number;
	/**
	 * Timestamp
	 */
	timestamp: string;
	/**
	 * Duration Ms
	 */
	duration_ms: number | null;
	/**
	 * Bytes In
	 */
	bytes_in: number;
	/**
	 * Bytes Out
	 */
	bytes_out: number;
	/**
	 * Flags In
	 */
	flags_in: number;
	/**
	 * Flags Out
	 */
	flags_out: number;
	/**
	 * Is Blocked
	 */
	is_blocked: boolean;
};

/**
 * TCPConnectionListResponse
 */
export type TcpConnectionListResponse = {
	/**
	 * Connections
	 */
	connections: Array<TcpConnectionItem>;
	/**
	 * Total
	 */
	total: number;
	/**
	 * Service Name
	 */
	service_name: string;
	/**
	 * Service Port
	 */
	service_port: number;
	/**
	 * Page
	 */
	page?: number;
	/**
	 * Page Size
	 */
	page_size?: number;
	/**
	 * Total Pages
	 */
	total_pages?: number;
};

/**
 * TCPConnectionStatsItem
 */
export type TcpConnectionStatsItem = {
	/**
	 * Read Min
	 */
	read_min: number;
	/**
	 * Read Max
	 */
	read_max: number;
	/**
	 * Write Min
	 */
	write_min: number;
	/**
	 * Write Max
	 */
	write_max: number;
	/**
	 * Count
	 */
	count: number;
	/**
	 * Time Series
	 */
	time_series?: Array<{
		[key: string]: number;
	}>;
};

/**
 * TCPConnectionStatsResponse
 */
export type TcpConnectionStatsResponse = {
	/**
	 * Stats
	 */
	stats: Array<TcpConnectionStatsItem>;
	/**
	 * Service Name
	 */
	service_name: string;
	/**
	 * Service Port
	 */
	service_port: number;
	/**
	 * Precision
	 */
	precision: number;
	/**
	 * Window Minutes
	 */
	window_minutes?: number;
};

/**
 * TCPEventItem
 */
export type TcpEventItem = {
	/**
	 * Id
	 */
	id: number;
	/**
	 * Timestamp
	 */
	timestamp: string;
	/**
	 * Event Type
	 */
	event_type: string;
	/**
	 * Data Size
	 */
	data_size: number;
	/**
	 * Data Bytes
	 */
	data_bytes: string | null;
	/**
	 * Truncated
	 */
	truncated: boolean;
	/**
	 * End Stream
	 */
	end_stream: boolean;
	/**
	 * Flags
	 */
	flags: Array<string>;
};

/**
 * TCPStats
 */
export type TcpStats = {
	/**
	 * Total Connections
	 */
	total_connections: number;
	/**
	 * Total Bytes In
	 */
	total_bytes_in: number;
	/**
	 * Total Bytes Out
	 */
	total_bytes_out: number;
	/**
	 * Avg Duration Ms
	 */
	avg_duration_ms: number;
	/**
	 * Total Flags Found
	 */
	total_flags_found: number;
};

/**
 * TimePoint
 */
export type TimePoint = {
	/**
	 * Timestamp
	 */
	timestamp: number;
	/**
	 * Count
	 */
	count: number;
};

/**
 * ValidationError
 */
export type ValidationError = {
	/**
	 * Location
	 */
	loc: Array<string | number>;
	/**
	 * Message
	 */
	msg: string;
	/**
	 * Error Type
	 */
	type: string;
};

export type HealthCheckApiHealthGetData = {
	body?: never;
	path?: never;
	query?: never;
	url: "/api/health";
};

export type HealthCheckApiHealthGetResponses = {
	/**
	 * Successful Response
	 */
	200: unknown;
};

export type GetServicesApiServicesGetData = {
	body?: never;
	path?: never;
	query?: never;
	url: "/api/services";
};

export type GetServicesApiServicesGetResponses = {
	/**
	 * Successful Response
	 */
	200: ServiceListResponse;
};

export type GetServicesApiServicesGetResponse =
	GetServicesApiServicesGetResponses[keyof GetServicesApiServicesGetResponses];

export type GetServiceByPortApiServicesPortGetData = {
	body?: never;
	path: {
		/**
		 * Port
		 */
		port: number;
	};
	query?: never;
	url: "/api/services/{port}";
};

export type GetServiceByPortApiServicesPortGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetServiceByPortApiServicesPortGetError =
	GetServiceByPortApiServicesPortGetErrors[keyof GetServiceByPortApiServicesPortGetErrors];

export type GetServiceByPortApiServicesPortGetResponses = {
	/**
	 * Successful Response
	 */
	200: ServiceListItem;
};

export type GetServiceByPortApiServicesPortGetResponse =
	GetServiceByPortApiServicesPortGetResponses[keyof GetServiceByPortApiServicesPortGetResponses];

export type GetServiceRequestsApiServicesPortRequestsGetData = {
	body?: never;
	path: {
		/**
		 * Port
		 */
		port: number;
	};
	query?: {
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
		/**
		 * Filter Path
		 */
		filter_path?: string | null;
		/**
		 * Filter Method
		 */
		filter_method?: string | null;
		/**
		 * Filter Status
		 */
		filter_status?: number | null;
		/**
		 * Filter Blocked
		 */
		filter_blocked?: boolean | null;
	};
	url: "/api/services/{port}/requests";
};

export type GetServiceRequestsApiServicesPortRequestsGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetServiceRequestsApiServicesPortRequestsGetError =
	GetServiceRequestsApiServicesPortRequestsGetErrors[keyof GetServiceRequestsApiServicesPortRequestsGetErrors];

export type GetServiceRequestsApiServicesPortRequestsGetResponses = {
	/**
	 * Successful Response
	 */
	200: RequestListResponse;
};

export type GetServiceRequestsApiServicesPortRequestsGetResponse =
	GetServiceRequestsApiServicesPortRequestsGetResponses[keyof GetServiceRequestsApiServicesPortRequestsGetResponses];

export type GetRequestDetailApiRequestsRequestIdGetData = {
	body?: never;
	path: {
		/**
		 * Request Id
		 */
		request_id: number;
	};
	query?: never;
	url: "/api/requests/{request_id}";
};

export type GetRequestDetailApiRequestsRequestIdGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetRequestDetailApiRequestsRequestIdGetError =
	GetRequestDetailApiRequestsRequestIdGetErrors[keyof GetRequestDetailApiRequestsRequestIdGetErrors];

export type GetRequestDetailApiRequestsRequestIdGetResponses = {
	/**
	 * Successful Response
	 */
	200: RequestDetailResponse;
};

export type GetRequestDetailApiRequestsRequestIdGetResponse =
	GetRequestDetailApiRequestsRequestIdGetResponses[keyof GetRequestDetailApiRequestsRequestIdGetResponses];

export type GetRequestRawApiRequestsRequestIdRawGetData = {
	body?: never;
	path: {
		/**
		 * Request Id
		 */
		request_id: number;
	};
	query?: never;
	url: "/api/requests/{request_id}/raw";
};

export type GetRequestRawApiRequestsRequestIdRawGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetRequestRawApiRequestsRequestIdRawGetError =
	GetRequestRawApiRequestsRequestIdRawGetErrors[keyof GetRequestRawApiRequestsRequestIdRawGetErrors];

export type GetRequestRawApiRequestsRequestIdRawGetResponses = {
	/**
	 * Successful Response
	 */
	200: unknown;
};

export type GetServicePathStatsApiServicesPortPathsGetData = {
	body?: never;
	path: {
		/**
		 * Port
		 */
		port: number;
	};
	query?: {
		/**
		 * Window Minutes
		 */
		window_minutes?: number | null;
		/**
		 * Start Time
		 */
		start_time?: string | null;
		/**
		 * End Time
		 */
		end_time?: string | null;
	};
	url: "/api/services/{port}/paths";
};

export type GetServicePathStatsApiServicesPortPathsGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetServicePathStatsApiServicesPortPathsGetError =
	GetServicePathStatsApiServicesPortPathsGetErrors[keyof GetServicePathStatsApiServicesPortPathsGetErrors];

export type GetServicePathStatsApiServicesPortPathsGetResponses = {
	/**
	 * Successful Response
	 */
	200: PathStatsResponse;
};

export type GetServicePathStatsApiServicesPortPathsGetResponse =
	GetServicePathStatsApiServicesPortPathsGetResponses[keyof GetServicePathStatsApiServicesPortPathsGetResponses];

export type GetServiceQueryStatsApiServicesPortQueriesGetData = {
	body?: never;
	path: {
		/**
		 * Port
		 */
		port: number;
	};
	query?: {
		/**
		 * Window Minutes
		 */
		window_minutes?: number | null;
		/**
		 * Start Time
		 */
		start_time?: string | null;
		/**
		 * End Time
		 */
		end_time?: string | null;
	};
	url: "/api/services/{port}/queries";
};

export type GetServiceQueryStatsApiServicesPortQueriesGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetServiceQueryStatsApiServicesPortQueriesGetError =
	GetServiceQueryStatsApiServicesPortQueriesGetErrors[keyof GetServiceQueryStatsApiServicesPortQueriesGetErrors];

export type GetServiceQueryStatsApiServicesPortQueriesGetResponses = {
	/**
	 * Successful Response
	 */
	200: QueryStatsResponse;
};

export type GetServiceQueryStatsApiServicesPortQueriesGetResponse =
	GetServiceQueryStatsApiServicesPortQueriesGetResponses[keyof GetServiceQueryStatsApiServicesPortQueriesGetResponses];

export type GetServiceHeaderStatsApiServicesPortHeadersGetData = {
	body?: never;
	path: {
		/**
		 * Port
		 */
		port: number;
	};
	query?: {
		/**
		 * Window Minutes
		 */
		window_minutes?: number | null;
		/**
		 * Start Time
		 */
		start_time?: string | null;
		/**
		 * End Time
		 */
		end_time?: string | null;
	};
	url: "/api/services/{port}/headers";
};

export type GetServiceHeaderStatsApiServicesPortHeadersGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetServiceHeaderStatsApiServicesPortHeadersGetError =
	GetServiceHeaderStatsApiServicesPortHeadersGetErrors[keyof GetServiceHeaderStatsApiServicesPortHeadersGetErrors];

export type GetServiceHeaderStatsApiServicesPortHeadersGetResponses = {
	/**
	 * Successful Response
	 */
	200: HeaderStatsResponse;
};

export type GetServiceHeaderStatsApiServicesPortHeadersGetResponse =
	GetServiceHeaderStatsApiServicesPortHeadersGetResponses[keyof GetServiceHeaderStatsApiServicesPortHeadersGetResponses];

export type GetTcpConnectionsApiServicesPortTcpConnectionsGetData = {
	body?: never;
	path: {
		/**
		 * Port
		 */
		port: number;
	};
	query?: {
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: "/api/services/{port}/tcp-connections";
};

export type GetTcpConnectionsApiServicesPortTcpConnectionsGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetTcpConnectionsApiServicesPortTcpConnectionsGetError =
	GetTcpConnectionsApiServicesPortTcpConnectionsGetErrors[keyof GetTcpConnectionsApiServicesPortTcpConnectionsGetErrors];

export type GetTcpConnectionsApiServicesPortTcpConnectionsGetResponses = {
	/**
	 * Successful Response
	 */
	200: TcpConnectionListResponse;
};

export type GetTcpConnectionsApiServicesPortTcpConnectionsGetResponse =
	GetTcpConnectionsApiServicesPortTcpConnectionsGetResponses[keyof GetTcpConnectionsApiServicesPortTcpConnectionsGetResponses];

export type GetTcpConnectionDetailApiTcpConnectionsConnectionIdGetData = {
	body?: never;
	path: {
		/**
		 * Connection Id
		 */
		connection_id: number;
	};
	query?: never;
	url: "/api/tcp-connections/{connection_id}";
};

export type GetTcpConnectionDetailApiTcpConnectionsConnectionIdGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetTcpConnectionDetailApiTcpConnectionsConnectionIdGetError =
	GetTcpConnectionDetailApiTcpConnectionsConnectionIdGetErrors[keyof GetTcpConnectionDetailApiTcpConnectionsConnectionIdGetErrors];

export type GetTcpConnectionDetailApiTcpConnectionsConnectionIdGetResponses = {
	/**
	 * Successful Response
	 */
	200: TcpConnectionDetail;
};

export type GetTcpConnectionDetailApiTcpConnectionsConnectionIdGetResponse =
	GetTcpConnectionDetailApiTcpConnectionsConnectionIdGetResponses[keyof GetTcpConnectionDetailApiTcpConnectionsConnectionIdGetResponses];

export type GetTcpConnectionStatsApiServicesPortTcpConnectionStatsGetData = {
	body?: never;
	path: {
		/**
		 * Port
		 */
		port: number;
	};
	query?: {
		/**
		 * Window Minutes
		 */
		window_minutes?: number;
	};
	url: "/api/services/{port}/tcp-connection-stats";
};

export type GetTcpConnectionStatsApiServicesPortTcpConnectionStatsGetErrors = {
	/**
	 * Validation Error
	 */
	422: HttpValidationError;
};

export type GetTcpConnectionStatsApiServicesPortTcpConnectionStatsGetError =
	GetTcpConnectionStatsApiServicesPortTcpConnectionStatsGetErrors[keyof GetTcpConnectionStatsApiServicesPortTcpConnectionStatsGetErrors];

export type GetTcpConnectionStatsApiServicesPortTcpConnectionStatsGetResponses =
	{
		/**
		 * Successful Response
		 */
		200: TcpConnectionStatsResponse;
	};

export type GetTcpConnectionStatsApiServicesPortTcpConnectionStatsGetResponse =
	GetTcpConnectionStatsApiServicesPortTcpConnectionStatsGetResponses[keyof GetTcpConnectionStatsApiServicesPortTcpConnectionStatsGetResponses];
