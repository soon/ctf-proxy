static_resources:
  listeners:
  # HTTP listener
  - name: http_listener
    address:
      socket_address:
        address: "::"
        port_value: 15001
        ipv4_compat: true
    listener_filters:
    - name: envoy.filters.listener.original_dst
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.listener.original_dst.v3.OriginalDst

    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: hcm
          generate_request_id: true
          add_user_agent: false
          use_remote_address: false
          skip_xff_append: true
          server_header_transformation: PASS_THROUGH

          access_log:
          - name: envoy.access_loggers.file
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: /var/log/envoy/http_access.log
              json_format:
                start_time: "%START_TIME%"
                method: "%REQ(:METHOD)%"
                path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                status: "%RESPONSE_CODE%"
                duration_ms: "%DURATION%"
                upstream_host: "%UPSTREAM_HOST%"
                upstream_connection_id: "%UPSTREAM_CONNECTION_ID%"
                stream_id: "%STREAM_ID%"
                bytes_in: "%BYTES_RECEIVED%"
                bytes_out: "%BYTES_SENT%"

          http_filters:
          - name: envoy.filters.http.wasm
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
              config:
                name: interceptor
                vm_config:
                  vm_id: interceptor_vm
                  runtime: envoy.wasm.runtime.v8
                  code:
                    local:
                      filename: /etc/envoy/wasm/{HTTP_INTERCEPTOR_FILENAME}
                  allow_precompiled: true

          - name: envoy.filters.http.tap
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.tap.v3.Tap
              common_config:
                static_config:
                  match_config: { any_match: true }
                  output_config:
                    sinks:
                    - file_per_tap:
                        path_prefix: /var/log/envoy/tap/http_
                    max_buffered_rx_bytes: 0xFFFFFFFF
                    max_buffered_tx_bytes: 0xFFFFFFFF

          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              suppress_envoy_headers: true

          route_config:
            name: all
            virtual_hosts:
            - name: vhost
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route:
                  cluster: http_passthrough
                  timeout: 0s

  # TCP listener
  - name: tcp_listener
    address:
      socket_address:
        address: "::"
        port_value: 15002
        ipv4_compat: true
    listener_filters:
    - name: envoy.filters.listener.original_dst
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.listener.original_dst.v3.OriginalDst

    filter_chains:
    - transport_socket:
        name: envoy.transport_sockets.tap
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tap.v3.Tap
          common_config:
            static_config:
              match: { any_match: true }
              output_config:
                sinks:
                - format: JSON_BODY_AS_BYTES
                  file_per_tap:
                    path_prefix: /var/log/envoy/tcp-tap/tcp
          transport_socket:
            name: envoy.transport_sockets.raw_buffer
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.raw_buffer.v3.RawBuffer
      filters:
      - name: envoy.filters.network.wasm
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm
          config:
            name: tcp_interceptor
            vm_config:
              vm_id: tcp_interceptor_vm
              runtime: envoy.wasm.runtime.v8
              code:
                local:
                  filename: /etc/envoy/wasm/{TCP_INTERCEPTOR_FILENAME}
              allow_precompiled: true
      - name: envoy.filters.network.tcp_proxy
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: tcp
          cluster: tcp_passthrough
          access_log:
          - name: envoy.access_loggers.file
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: /var/log/envoy/tcp_access.log
              json_format:
                start_time: "%START_TIME%"
                duration_ms: "%DURATION%"
                upstream_host: "%UPSTREAM_HOST%"
                downstream_remote_address: "%DOWNSTREAM_REMOTE_ADDRESS%"
                downstream_local_address: "%DOWNSTREAM_LOCAL_ADDRESS%"
                upstream_local_address: "%UPSTREAM_LOCAL_ADDRESS%"
                bytes_in: "%BYTES_RECEIVED%"
                bytes_out: "%BYTES_SENT%"
                connection_id: "%CONNECTION_ID%"
                interceptor_message: "%FILTER_STATE(envoy.string)%"

  clusters:
  # HTTP passthrough cluster
  - name: http_passthrough
    type: ORIGINAL_DST
    lb_policy: CLUSTER_PROVIDED
    connect_timeout: 1s

  # TCP passthrough cluster
  - name: tcp_passthrough
    type: ORIGINAL_DST
    lb_policy: CLUSTER_PROVIDED
    connect_timeout: 1s

admin:
  address:
    socket_address: { address: 127.0.0.1, port_value: 15000 }