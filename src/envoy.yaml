static_resources:
  listeners:
  - name: http_in
    address:
      socket_address:
        address: "::"
        port_value: 15001
        ipv4_compat: true
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: hcm
          generate_request_id: false
          add_user_agent: false
          use_remote_address: false
          skip_xff_append: true
          server_header_transformation: PASS_THROUGH

          access_log:
          - name: envoy.access_loggers.file
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: /var/log/envoy/http_access.log
              json_format:
                start_time: "%START_TIME%"
                method: "%REQ(:METHOD)%"
                path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                status: "%RESPONSE_CODE%"
                duration_ms: "%DURATION%"
                upstream_host: "%UPSTREAM_HOST%"
                bytes_in: "%BYTES_RECEIVED%"
                bytes_out: "%BYTES_SENT%"

          http_filters:
          - name: envoy.filters.http.tap
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.tap.v3.Tap
              common_config:
                static_config:
                  match_config: { any_match: true }
                  output_config:
                    sinks:
                    - file_per_tap:
                        path_prefix: /var/log/envoy/tap/http_
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              suppress_envoy_headers: true

          route_config:
            name: all
            virtual_hosts:
            - name: vhost
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route:
                  cluster: app
                  timeout: 0s

  clusters:
  - name: app
    type: STRICT_DNS
    dns_lookup_family: AUTO
    connect_timeout: 1s
    load_assignment:
      cluster_name: app
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: localhost
                port_value: 3000

admin:
  address:
    socket_address: { address: 127.0.0.1, port_value: 15000 }
